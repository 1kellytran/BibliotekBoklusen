@page "/allproducts"
@inject Blazored.LocalStorage.ILocalStorageService localStorage;
@inject ISearchManager SearchManager
@inject ILoanManager LoanManager
@inject IProductManager ProductManager
@inject IUserManager UserManager
@inject IProductCopyManager ProductCopyManager

<NotAuthorized>
    <h3>Products</h3>
    @if (products != null)
    {
        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th>Titel</th>
                    <th>Typ</th>
                    <th>Utgåva</th>
                    <th>Skapare</th>
                    <th>Tillgängliga Ex</th>
                </tr>
            </thead>
            @foreach (var p in products)
            {
                <tr>
                    <a href="/ProductById/@p.Id" class="table-bordered">@p.Title</a>
                    <td>@p.Type</td>
                    <td>@p.Published.ToString("yyyy")</td>
                    @foreach (var creator in p.Creators)
                    {
                        <td>@creator.FirstName @creator.LastName</td>
                        <br />
                    }
                    <td><a class="btn btn-primary" @onclick="() => LoanProduct(p.Id)">Låna</a></td>
                    <td><a class="btn btn-warning" href="/EditProduct/@p.Id">i</a></td>
                    <td><a class="btn btn-danger" @onclick="() => DeleteProduct(p.Id)">x</a></td>
                </tr>
                @if (Edit == true)
                {
                    @foreach(var c in p.Creators)
                    {    
                        <label>Titel</label><br />
                        <input type="text" @bind-value="p.Title" /><br />
                        <label>Förnamn</label><br />
                        <input type="text" @bind-value=c.FirstName/>
                        <label>Efternamn</label><br />
                        <input type="text" @bind-value="c.LastName" /><br />
                        <label>Dag, datum & tid</label><br />
                        <input type="text" @bind-value="p.Published" /><br />
                        <button class="btn btn-primary" @onclick="() => SaveEditProduct(p.Id, p)">Spara ändringar</button>
                    }
                }
            }
        </table>
    }
</NotAuthorized>

@code {
    [Parameter]
    public int Id { get; set; }
    public List<Product>? products { get; set; } = new List<Product>();
    public Product? productToUpdate { get; set; }
    public User CurrentUser { get; set; }
    public bool Edit;

    protected override async Task OnInitializedAsync()
    {
        //var userEmail = await localStorage.GetItemAsync<string>("email");
        //CurrentUser = await UserManager.GetCurrentUser(userEmail);

        products = await ProductManager.GetAllProducts();
    }

    public async Task EditProduct(int id, Product productToEdit)
    {
        Edit = true;
    }

    public async Task SaveEditProduct(int id, Product productToUpdate)
    {
        await ProductManager.UpdateProduct(id, productToUpdate);
        Edit = false;
    }

    public async Task DeleteProduct(int id)
    {
        await ProductManager.DeleteProduct(id);
        products = await ProductManager.GetAllProducts();
    }

    public async Task LoanProduct(int productId)
    {
      
        LoanManager.AddLoan(productId, CurrentUser.Id);
    }
}
