@page "/seminar"
@inject ISeminarManager SeminarManager
@inject NavigationManager NavigationManager

<h3>Seminarium</h3>

<AuthorizeView Context="_context" Roles="Librarian, Admin">
    @if (AllSeminars == null)
    {
        <h4>Laddar...</h4>
    }
    else if (AllSeminars.Count == 0)
    {
        <h4>Inga seminarium för tillfället</h4>
    }
    else
    {
        <table class="table">
            <thead class="thead-light">
                <tr>
                    <th>Title</th>
                    <th>First name</th>
                    <th>Last name</th>
                    <th>Datum & tid</th>
                </tr>
            </thead>
            @foreach (var s in AllSeminars)
            {
                <tr>
                    <td>@s.Title</td>
                    <td>@s.FirstName</td>
                    <td>@s.LastName</td>
                    <td>@s.DayAndTime.ToString()</td>
                    <td><a class="btn btn-warning" @onclick="() => EditSeminar(s.Id, s)">i</a></td>
                    <td><a class="btn btn-danger" @onclick="() => DeleteSeminar(s.Id)">x</a></td>
                </tr>
                @if (Edit == true)
                {
                    <label>Titel</label>
                    <br />
                    <input type="text" @bind-value="s.Title" />
                    <br />
                    <label>Förnamn</label>
                    <br />
                    <input type="text" @bind-value="s.FirstName" />
                    <br />
                    <label>Efternamn</label>
                    <br />
                    <input type="text" @bind-value="s.LastName" />
                    <br />
                    <label>Datum & tid</label>
                    <br />
                    <input type="text" @bind-value="s.DayAndTime" />
                    <br />
                    <button class="btn btn-primary" @onclick="() => SaveEditSeminar(s.Id, s)">Spara ändringar</button>
                }
            }
        </table>
    }
    <button class="btn btn-success" @onclick="() => ShowRegisterSeminar()">Registrera seminarium</button><br />

    @if (RegisterSeminar)
    {
        <RegisterSeminar></RegisterSeminar>
    }
</AuthorizeView>

@if (AllSeminars == null)
{
    <h4>Laddar...</h4>
}
else if (AllSeminars.Count == 0)
{
    <h4>Inga seminarium för tillfället</h4>
}
else
{
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th>Title</th>
                <th>First name</th>
                <th>Last name</th>
                <th>Datum & tid</th>
            </tr>
        </thead>
        @foreach (var s in AllSeminars)
        {
            <tr>
                <td>@s.Title</td>
                <td>@s.FirstName</td>
                <td>@s.LastName</td>
                <td>@s.DayAndTime.ToString()</td>
            </tr>
        }
    </table>
}

@code {
    public List<Seminarium>? AllSeminars { get; set; } = new();
    public Seminarium CreateSeminar { get; set; } = new();
    public Seminarium UpdateSeminar { get; set; } = new();
    public DateTime TodaysDate { get; set; } = DateTime.Now;
    public string message;
    public bool Edit;
    public bool RegisterSeminar;
    public int SortTitle = 0;

    protected override async Task OnInitializedAsync()
    {
        AllSeminars = await SeminarManager.GetAllSeminars();
    }

    public async Task EditSeminar(int id, Seminarium seminarToUpdate)
    {
        Edit = true;
    }

    public async Task SaveEditSeminar(int id, Seminarium UpdateSeminar)
    {
        await SeminarManager.UpdateSeminar(id, UpdateSeminar);
        Edit = false;
    }

    public async Task DeleteSeminar(int id)
    {
        await SeminarManager.DeleteSeminar(id);
        AllSeminars = await SeminarManager.GetAllSeminars();
    }

    public async Task AddSeminar()
    {
        CreateSeminar.DayAndTime = TodaysDate;
        var result = await SeminarManager.CreateSeminar(CreateSeminar);
        _ = result == null ? (message = $"Seminariet \"{CreateSeminar.Title}\" har lagts till") : (message = result);
    }

    //public async Task RegisterSeminar()
    //{
    //    CreateSeminar.DayAndTime = TodaysDate;
    //    var result = await SeminarManager.CreateSeminar(CreateSeminar);
    //    _ = result == null ? (message = $"Seminariet \"{CreateSeminar.Title}\" har lagts till") : (message = result);
    //    AllSeminars = await SeminarManager.GetAllSeminars();
    //}

    void ShowRegisterSeminar()
    {
        _ = !RegisterSeminar ? RegisterSeminar = true : RegisterSeminar = false;
    }
}
