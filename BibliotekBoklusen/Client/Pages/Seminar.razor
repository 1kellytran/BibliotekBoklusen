@page "/seminar"
@inject ISeminarManager SeminarManager
@inject NavigationManager NavigationManager

<h3>Seminarium</h3>
<AuthorizeView Roles="Librarian, Admin">
    @if (editSeminar)
    {
        <EditForm Context="_context" Model="SeminarToUpdate" OnSubmit="SaveEditSeminar">
            <table class="table">
                <thead class="thead-light">
                    <tr>
                        <th>Seminarium</th>
                        <th>Förnamn</th>
                        <th>Efternamn</th>
                        <th>Datum & tid</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><input type="text" @bind-value="SeminarToUpdate.Title" /></td>
                        <td><input type="text" @bind-value="SeminarToUpdate.FirstName" /></td>
                        <td><input type="text" @bind-value="SeminarToUpdate.LastName" /></td>
                        <td><input type="text" @bind-value="SeminarToUpdate.DayAndTime" /></td>
                        <td><button type="submit" class="btn btn-primary">Spara</button></td>
                    </tr>
                </tbody>
            </table>
        </EditForm>
    }
</AuthorizeView>


@if (AllSeminars == null)
{
    <h4>Laddar...</h4>
}
else if (AllSeminars.Count == 0)
{
    <h4>Inga seminarium för tillfället</h4>
}
else
{
    <table class="table table-striped">
        <thead class="thead-light">
            <tr>
                <th>Title</th>
                <th>First name</th>
                <th>Last name</th>
                <th>Datum & tid</th>
                <AuthorizeView Context="_context" Roles="Librarian, Admin">
                    <th></th>
                    <th></th>
                </AuthorizeView>
            </tr>
        </thead>
        @foreach (var s in AllSeminars)
        {
            <tr>
                <a href="/SeminarById/@s.Id" class="table-bordered">@s.Title</a>
                <td>@s.FirstName</td>
                <td>@s.LastName</td>
                <td>@s.DayAndTime</td>
            </tr>
        }
    </table>
}
<AuthorizeView Context="_context" Roles="Librarian, Admin">
    <button class="btn btn-success" @onclick="() => ShowRegisterSeminar()">Registrera seminarium</button>
</AuthorizeView>
<br />

@if (RegisterSeminar)
{
    <RegisterSeminar></RegisterSeminar>
}

@code {
    [Parameter]
    public int Id { get; set; }
    public List<Seminarium>? AllSeminars { get; set; } = new();
    public Seminarium CreateSeminar { get; set; } = new();
    public Seminarium SeminarToUpdate { get; set; } = new();
    public DateTime TodaysDate { get; set; } = DateTime.Now;
    public string message;
    public bool editSeminar;
    public bool RegisterSeminar;
    public int SortTitle = 0;
    int SeminarId;

    protected override async Task OnInitializedAsync()
    {
        AllSeminars = await SeminarManager.GetAllSeminars();
    }

    public async Task EditSeminar(int id, Seminarium seminarToUpdate)
    {
        editSeminar = true;
        SeminarId = id;
        SeminarToUpdate = seminarToUpdate;
    }

    public async Task SaveEditSeminar()
    {
        await SeminarManager.UpdateSeminar(SeminarId, SeminarToUpdate);
        editSeminar = false;
    }

    public async Task DeleteSeminar(int id)
    {
        await SeminarManager.DeleteSeminar(id);
        AllSeminars = await SeminarManager.GetAllSeminars();
    }

    public async Task AddSeminar()
    {
        CreateSeminar.DayAndTime = TodaysDate;
        var result = await SeminarManager.CreateSeminar(CreateSeminar);
        _ = result == null ? (message = $"Seminariet \"{CreateSeminar.Title}\" har lagts till") : (message = result);
    }

    void ShowRegisterSeminar()
    {
        _ = !RegisterSeminar ? RegisterSeminar = true : RegisterSeminar = false;
    }
}
