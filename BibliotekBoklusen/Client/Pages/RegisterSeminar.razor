@inject ISeminarManager SeminarManager

<h3>RegisterSeminar</h3>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Registrera nytt seminarium</h5>
        <EditForm Model="CreateSeminar" OnSubmit="AddSeminar">

            <div class="form-group">
                <label for="title">Titel</label>
                <InputText Id="title" class="form-control" @bind-Value="CreateSeminar.Title" />
            </div>
            <div class="form-group">
                <label for="firstname">Föreläsarens förnamn</label>
                <InputText Id="firstname" class="form-control" @bind-Value="CreateSeminar.FirstName" />
            </div>
            <div class="form-group">
                <label for="lastname">Föreläsarens efternamn</label>
                <InputText Id="lastname" class="form-control" @bind-Value="CreateSeminar.LastName" />
            </div>
            <div class="form-group">
                <label for="dayandtime">Dag, datum & tid</label>
                <InputDate min = "TodaysDate" Id="dayandtime" class="form-control" @bind-Value="TodaysDate" />
            </div>
            <div>
                <br />
                <button type="submit" class="btn btn-primary">Lägg till</button>
            </div>
        </EditForm>
    </div>
</div>

@if(message != null)
{
    <MudAlert Severity="Severity.Success">@message</MudAlert>
}

@code {
    public List<Seminarium> AllSeminars { get; set; }
    public Seminarium CreateSeminar { get; set; } = new();
    public DateTime TodaysDate { get; set; } = DateTime.Now;
    public string message;

    public async Task AddSeminar()
    {
        CreateSeminar.DayAndTime = TodaysDate;
        var result = await SeminarManager.CreateSeminar(CreateSeminar);
        _ = result == null ? (message = $"Seminariet \"{CreateSeminar.Title}\" har lagts till") : (message = result);
        AllSeminars = await SeminarManager.GetAllSeminars();
    }
}
