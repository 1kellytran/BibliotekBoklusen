@page "/ChangePasswordEdit"
@inject IUserManager UserManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage;


<EditForm Model="request" OnValidSubmit="EditPassword">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="mb-3">
        <label for="password">Gamla lösenordet</label>
        <InputText id="password" @bind-Value="request.OldPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => request.OldPassword)" />
    </div>

    <div class="mb-3">
        <label for="password">Nya lösenordet</label>
        <InputText id="password" @bind-Value="request.NewPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => request.NewPassword)" />
    </div>

    <div class="mb-3">
        <label for="confirmPassword">Bekräfta nya lösenordet</label>
        <InputText id="confirmPassword" @bind-Value="request.NewPasswordConfirmed" class="form-control" type="password" />
        <ValidationMessage For="@(() => request.NewPasswordConfirmed)" />
    </div>
    <button type="submit" class="btn btn-primary">Tillämpa nya lösenordet</button>
</EditForm>

<h5>@message</h5>

@code {
    PasswordDto request = new PasswordDto();
    string message = "";

    public async Task EditPassword()
    {
        var userEmail = await localStorage.GetItemAsync<string>("email");
        request.Email = userEmail;
        message  = await UserManager.ChangePassword(request);
       
    }


}
