@page "/login"
@inject NavigationManager NavigationManager
@inject IUserManager UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="card">
    <h1 class="card-header">Logga in</h1>
    <div class="card-body">
        <EditForm Model="user" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" @bind-Value="user.Email" class="form-control" />
                <ValidationMessage For="@(() => user.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Lösenord</label>
                <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => user.Password)" />
            </div>
            <button type="submit" class="btn btn-primary">Logga in</button>
            <NavLink href="register" class="btn btn-link">Registrera</NavLink>
        </EditForm>
    </div>
</div>

@*<section class="vh-100 gradient-custom">
  <div class="container py-5 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-12 col-md-8 col-lg-6 col-xl-5">
        <div class="card bg-dark text-white" style="border-radius: 1rem;">
          <div class="card-body p-5 text-center">

            <div class="mb-md-5 mt-md-4 pb-5">

              <h2 class="fw-bold mb-2 text-uppercase">Login</h2>
              <p class="text-white-50 mb-5">Please enter your login and password!</p>

              <div class="form-outline form-white mb-4">
                 <label for="email">Email</label>
                <InputText id="email" @bind-Value="user.Email" class="form-control" />
                <ValidationMessage For="@(() => user.Email)" />
              </div>

              <div class="form-outline form-white mb-4">
                <input type="password" id="typePasswordX" class="form-control form-control-lg" />
                <label class="form-label" for="typePasswordX">Password</label>
              </div>

              <p class="small mb-5 pb-lg-2"><a class="text-white-50" href="#!">Forgot password?</a></p>

              <button class="btn btn-outline-light btn-lg px-5" type="submit">Login</button>

              <div class="d-flex justify-content-center text-center mt-4 pt-1">
                <a href="#!" class="text-white"><i class="fab fa-facebook-f fa-lg"></i></a>
                <a href="#!" class="text-white"><i class="fab fa-twitter fa-lg mx-4 px-2"></i></a>
                <a href="#!" class="text-white"><i class="fab fa-google fa-lg"></i></a>
              </div>

            </div>

            <div>
              <p class="mb-0">Don't have an account? <a href="#!" class="text-white-50 fw-bold">Sign Up</a>
              </p>
            </div>

          </div>
        </div>
      </div>
    </div>
  </div>
</section>*@

@if(message != "You have been signed in " && message != null)
{
    <MudAlert Severity="Severity.Error">@message</MudAlert>
}

@code {
    private LoginDto user = new LoginDto();
    string message;

    async Task HandleLogin()
    {
        message = await UserManager.Login(user);

        if (message == "You have been signed in")
        {
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            NavigationManager.NavigateTo("/myprofile");
        }
        else
        {
            message = "Ogiltig e-mail eller lösenord. Ange rätt e-mail och/eller lösenord och försök igen.";
        }
    }
}
