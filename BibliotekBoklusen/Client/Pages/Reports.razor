@page "/reports"
@inject ILoanManager LoanManager
@inject IUserManager UserManager
<h3>Reports</h3>

<AuthorizeView Roles="Librarian, Admin">
    <div class="form-group">
        <div class="col">
            <div class="form-outline">
                <href @onclick="ShowProductsToBeReturned">Användare med aktiva lån</href>
            </div>
            <div class="form-outline">
                <href @onclick="ShowProductsToBeReturned">Användare med flest lån</href>
            </div>
        </div>
    </div>
</AuthorizeView>

<div class="form-group">
    <div class="col"> 
        <href @onclick="ShowPopularProducts">Boklusens mest populära</href>
    </div>
</div>

@if (ProductsToBeReturned)
{
    <NeedToReturn></NeedToReturn>
}

@if (WhoLoansAlot)
{
    <UserLoansAlot></UserLoansAlot>
}

@if (PopularProducts)
{
    <TopProducts/>
}

@code {
    public List<User> UserWithActiveLoans { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        var loans = await LoanManager.GetAllLoansAsync();
        var users = await UserManager.GetAllUser();
        
        //foreach (var loan in loans)
        //{
        //    foreach (var user in collection)
        //    {
                
        //    }
        //}

    }


    bool ProductsToBeReturned;
    bool WhoLoansAlot;
    bool PopularProducts;

    void ShowProductsToBeReturned()
    {
        _ = !ProductsToBeReturned ? ProductsToBeReturned = true : ProductsToBeReturned = false; 
    }

    void ShowWhoLoansAlot()
    {
        _ = !WhoLoansAlot ? WhoLoansAlot = true : WhoLoansAlot = false;
    }

    void ShowPopularProducts()
    {
        _ = !PopularProducts ? PopularProducts = true : PopularProducts = false;
    }



}
