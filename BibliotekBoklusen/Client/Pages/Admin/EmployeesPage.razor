@page "/employees"
@inject IUserManager UserManager


<h3>Personal</h3>
<div>
    <h6 class="validation-message">@message</h6>
</div>
@if (editUser)
{
    <EditForm Model="userToUpdate" OnSubmit="UpdateUser">
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Förnamn</th>
                    <th scope="col">Efternamn</th>
                    <th scope="col">Email</th>
                    <th scope="col">Medlem sedan</th>
                    <th scope="col">Behörig admin</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><input @bind="userToUpdate.FirstName" /></td>
                    <td><input @bind="userToUpdate.LastName" /></td>
                    <td>@userToEdit.Email</td>
                    <td>@userToEdit.Created.ToString("d")</td>
                    <td><input type="checkbox" @bind="isAdmin" /></td>
                    <td><button type="submit" class="btn btn-primary">Spara</button></td>
                </tr>
            </tbody>
        </table>
    </EditForm>
}
<table class="table">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Förnamn</th>
            <th scope="col">Efternamn</th>
            <th scope="col">Email</th>
            <th scope="col">Medlem sedan</th>
            <th scope="col">Behörig admin</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in Employees)
        {
            <tr>
                <td>@employee.FirstName</td>
                <td>@employee.LastName</td>
                <td>@employee.Email</td>
                <td>@employee.Created.ToString("d")</td>
                @if (employee.UserRole.Equals(UserRole.Admin))
                {
                    <td>Ja</td>
                }
                else
                {
                    <td>Nej</td>
                }
                <td>
                    <MudButton @onclick="() => EditUser(employee)"><MudIcon Icon="@Icons.Filled.Edit"></MudIcon></MudButton>
                    <MudButton @onclick="() => DeleteUser(employee.Id)"><MudIcon Icon="@Icons.Filled.Delete"></MudIcon></MudButton>
                </td>
            </tr>
        }
    </tbody>
</table>


@code {
    private List<User> Employees = new List<User>();
    UpdatedUserDto userToUpdate = new UpdatedUserDto();
    User userToEdit = new User();
    int userId;
    bool editUser = false;
    bool isAdmin;
    string message;

    protected override async Task OnInitializedAsync()
    {
        message = "";
        Employees = await UserManager.GetEmployees();
    }

    private void EditUser(User user)
    {
        userToUpdate.FirstName = user.FirstName;
        userToUpdate.LastName = user.LastName;
        userToUpdate.IsActive = user.IsActive;
        userToEdit = user;
        userId = user.Id;

        editUser = true;
    }

    private async Task UpdateUser()
    {
        if (isAdmin)
        {
            userToUpdate.UserRole = UserRole.Admin;
        }
        else
        {
            userToUpdate.UserRole = UserRole.Librarian;
        }
        editUser = false;
        await UserManager.UpdateUserinformation(userToUpdate, userId);
        Employees = await UserManager.GetEmployees();
        message = "Användaren har uppdaterats";
    }

    private async Task DeleteUser(int userId)
    {
        await UserManager.DeleteUser(userId);
        Employees = await UserManager.GetEmployees();
    }

}

