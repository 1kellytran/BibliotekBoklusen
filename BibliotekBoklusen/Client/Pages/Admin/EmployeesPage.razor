@page "/employees"
@inject IUserManager UserManager
@inject IDialogService DialogService

@if(message == "Uppdaterad")
{
	<MudAlert Severity="Severity.Success">@message</MudAlert>
}

@if (editUser)
{
    <EditForm Model="EmployeeToUpdate" OnSubmit="UpdateEmployee">
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Förnamn</th>
                    <th scope="col">Efternamn</th>
                    <th scope="col">Email</th>
                    <th scope="col">Medlem sedan</th>
                    <th scope="col">Behörig admin</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><input @bind="EmployeeToUpdate.FirstName" /></td>
                    <td><input @bind="EmployeeToUpdate.LastName" /></td>
                    <td>@EmployeeToEdit.Email</td>
                    <td>@EmployeeToEdit.Created.ToString("d")</td>
                    <td><input type="checkbox" @bind="isAdmin" /></td>
                    <td><button type="submit" class="btn btn-primary">Spara</button></td>
                </tr>
            </tbody>
        </table>
    </EditForm>
}

@if (AllEmployees != null || AllEmployees.Count != 0)
{
    <MudTable Context="employee" Items="@AllEmployees">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Personal</MudText>
            <MudSpacer />
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Förnamn</MudTh>
            <MudTh>Efternamn</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Medlem sedan</MudTh>
            <MudTh>Behörig admin</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Förnamn">@employee.FirstName</MudTd>
            <MudTd DataLabel="Efternamn">@employee.LastName</MudTd>
            <MudTd DataLabel="Email">@employee.Email</MudTd>
            <MudTd DataLabel="Medlem sedan">@employee.Created.ToString("d")</MudTd>
            @if (employee.UserRole.Equals(UserRole.Admin))
            {
            <MudTd DataLabel="Behörig admin">Ja</MudTd>
            }
            else
            {
            <MudTd DataLabel="Behörig admin">Nej</MudTd>
            }
        <MudTd>
            <MudButton @onclick="() => EditEmployee(employee)"><MudIcon Icon="@Icons.Filled.Edit"></MudIcon></MudButton>
            <MudButton @onclick="() => DeleteEmployee(employee.Id)"><MudIcon Icon="@Icons.Filled.Delete"></MudIcon></MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
}

@code {
    List<User> AllEmployees = new List<User>();
    UpdatedUserDto EmployeeToUpdate = new UpdatedUserDto();
    User EmployeeToEdit = new User();
    int userId;
    bool editUser;
    bool isAdmin;
    string message;

    protected override async Task OnInitializedAsync()
    {
        AllEmployees = await UserManager.GetEmployees();
    }

    private void EditEmployee(User employee)
    {
        EmployeeToUpdate.FirstName = employee.FirstName;
        EmployeeToUpdate.LastName = employee.LastName;
        EmployeeToUpdate.IsActive = employee.IsActive;
        EmployeeToEdit = employee;
        userId = employee.Id;

        editUser = true;
    }

    private async Task UpdateEmployee()
    {
        if (isAdmin)
        {
            EmployeeToUpdate.UserRole = UserRole.Admin;
        }
        else
        {
            EmployeeToUpdate.UserRole = UserRole.Librarian;
        }
        editUser = false;
        await UserManager.UpdateUserinformation(EmployeeToUpdate, userId);
        AllEmployees = await UserManager.GetEmployees();
        message = "Uppdaterad";
    }

    public async Task DeleteEmployee(int id)
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Är du säker på att du vill ta bort anställd? Detta går inte att återkalla.");
        parameters.Add("ButtonText", "Ta bort");
        parameters.Add("Color", Color.Error);
        parameters.Add("Id", id);

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };

        var dialog = DialogService.Show<DeleteUser>("Ta bort anställd", parameters, options);

        var result = await dialog.Result;
        if (!result.Cancelled)
        {
              AllEmployees = await UserManager.GetEmployees();
        }
    }
}

