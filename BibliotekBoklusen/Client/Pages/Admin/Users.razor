@page "/members"
@inject IDialogService DialogService
@inject IUserManager UserManager

<div>
    <h6 class="validation-message">@message</h6>
</div>
@if (editUser)
{
    <EditForm Model="userToUpdate" OnSubmit="UpdateUser">
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Förnamn</th>
                    <th scope="col">Efternamn</th>
                    <th scope="col">Email</th>
                    <th scope="col">Medlem sedan</th>
                    <th scope="col">Aktiv</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><input @bind="userToUpdate.FirstName" /></td>
                    <td><input @bind="userToUpdate.LastName" /></td>
                    <td>@userToEdit.Email</td>
                    <td>@userToEdit.Created.ToString("d")</td>
                    <td><input type="checkbox" @bind="userToUpdate.IsActive" /></td>
                    <td><button type="submit" class="btn btn-primary">Spara</button></td>
                </tr>
            </tbody>
        </table>
    </EditForm>
}

@if (Members != null || Members.Count != 0)
{
    <MudTable Context="member" Items="@Members">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Medlemmar</MudText>
            <MudSpacer />
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Förnamn</MudTh>
            <MudTh>Efternamn</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Medlem sedan</MudTh>
            <MudTh>Behörig admin</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Förnamn">@member.FirstName</MudTd>
            <MudTd DataLabel="Efternamn">@member.LastName</MudTd>
            <MudTd DataLabel="Email">@member.Email</MudTd>
            <MudTd DataLabel="Medlem sedan">@member.Created.ToString("d")</MudTd>
            @if (member.UserRole.Equals(UserRole.Admin))
            {
            <MudTd DataLabel="Behörig admin">Ja</MudTd>
            }
            else
            {
            <MudTd DataLabel="Behörig admin">Nej</MudTd>
            }
        <MudTd>
            <MudButton @onclick="() => EditUser(member)"><MudIcon Icon="@Icons.Filled.Edit"></MudIcon></MudButton>
            <MudButton @onclick="() => DeleteUser(member.Id)"><MudIcon Icon="@Icons.Filled.Delete"></MudIcon></MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
}

@code {
    private List<User> Members = new List<User>();
    UpdatedUserDto userToUpdate = new UpdatedUserDto();
    User userToEdit = new User();
    int userId;
    bool editUser = false;
    string message;

    protected override async Task OnInitializedAsync()
    {
        Members = await UserManager.GetMembers();
    }

    private void EditUser(User user)
    {
        userToUpdate.FirstName = user.FirstName;
        userToUpdate.LastName = user.LastName;
        userToUpdate.IsActive = user.IsActive;
        userToUpdate.UserRole = UserRole.Member;
        userToEdit = user;
        userId = user.Id;
        editUser = true;
    }

    private async Task UpdateUser()
    {
        editUser = false;
        await UserManager.UpdateUserinformation(userToUpdate, userId);
        Members = await UserManager.GetAllUser();
        message = "Uppdaterad";
    }

    public async Task DeleteUser(int id)
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Är du säker på att du vill ta bort användaren? Detta går inte att återkalla.");
        parameters.Add("ButtonText", "Radera");
        parameters.Add("Color", Color.Error);
        parameters.Add("Id", id);

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };

        var dialog = DialogService.Show<DeleteUser>("Ta bort användare", parameters, options);

        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            Members = await UserManager.GetAllUser();
        }

    }
}