@page "/createproduct"
@inject IDataManager DataManager
@inject ITestManager TestManager

<h3>AddProduct</h3>

<EditForm Model="Product" OnValidSubmit="RegisterProduct">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="Title">Titel:</label>
        <InputText Id="Title" class="form-control" @bind-Value="Product.Title" />
        <ValidationMessage For="@(() => Product.Title)" />
    </div>

    <div class="form-group">
        <label for="firstname">Författarens förnamn:</label>
        <InputText Id="firstname" class="form-control" @bind-Value="Creator.FirstName" />
        <ValidationMessage For="@(() => Creator.FirstName)" />
    </div>

    <div class="form-group">
        <label for="lastname ">Författarens efternamn:</label>
        <InputText Id="lastname" class="form-control" @bind-Value="Creator.LastName" />
        <ValidationMessage For="@(() => Creator.LastName)" />
    </div>
    <br />
    <div class="form-group">
        <label>Välj genre:</label>
        @if (Categories != null || Categories.Count <= 0)
        {
            @foreach (var Item in Categories)
            {
                <div class="form-group">
                    <input type="checkbox" id="@Item.CategoryName" @bind="Item.isChecked">
                    <label for="@Item.CategoryName"> @Item.CategoryName</label>
                </div>
            }
        }
    </div>
    <br />
    <div class="form-group">
        <label for="publishYear ">Publicerad:</label>
        <InputNumber Id="publishYear" class="form-control" @bind-Value="Product.PublishYear" />
        <ValidationMessage For="@(() => Product.PublishYear)" />
    </div>
    <br />
    <div class="form-group">
        <label>Välj typ:</label>
        <InputRadioGroup id="type" @bind-Value="type" class="form-control">
            @foreach (var productType in DataManager.Types)
            {
                <div class="form-group">
                    <InputRadio id=@productType Value="productType" />
                    <label for="productType">@productType</label>
                </div>
            }
        </InputRadioGroup>
    </div>
    <br />
    <button type="submit" class="btn btn-primary" @onclick="(()=>RegisterProduct())">Add Product</button>
</EditForm>
<br />
<h4 class="validation-message">@message</h4>


@code {
    public Creator Creator { get; set; } = new();
    public Product Product { get; set; } = new();

    public List<Category> Categories { get; set; } = new();
    public string type;
    string message;

    protected override async Task OnInitializedAsync()
    {

        Categories = await DataManager.GetAllCategories();
    }

    public async Task RegisterProduct()
    {
        if (Creator != null)
        {
            //Testar att lägga till flera författare.
            //var newCreator = new CreatorModel { FirstName = "Nils", LastName = "KarlssonPyssling" };
            //Product.Creators.Add(newCreator);
            Product.Type = type;
            Product.Creators.Add(Creator);
            Product.Category.AddRange(Categories.Where(x => x.isChecked));
        }
        var productName = await TestManager.CreateProduct(Product);
        if(productName != null)
        {
            message = $"{productName} har lagts till";
        }
        Product = new();
    }
}