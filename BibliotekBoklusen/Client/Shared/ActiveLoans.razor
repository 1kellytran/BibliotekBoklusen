@inject ILoanManager LoanManager
@page "/activeloans"

<h3>Aktiva lån</h3>
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Användare</th>
            <th scope="col">Titel på boken</th>
            <th scope="col">Exemplar Id</th>
            <th scope="col">Returneras:</th>
        </tr>
    </thead>
    @foreach (var l in Loans)
    {
        <tbody>
            <tr>
                <th scope="row">1</th>
                <td>@l.User.Email</td>
                <td>@l.ProductCopy.product.Title</td>
                <td>@l.ProductCopyId</td>
                <td>@l.ReturnDate.ToString("d")</td>
            </tr>
        </tbody>
    }
</table>

@code {
    private List<Loan> Loans { get; set; } = new List<Loan>();
    
    protected override async Task OnInitializedAsync()
    {
        var result = await LoanManager.GetAllLoansAsync();
        if (result != null)
        {
            foreach (var activeLoan in result)
            {
                if (activeLoan.isReturned == false)
                {
                    Loans.Add(activeLoan);
                }
            }         
        }
    }
}
